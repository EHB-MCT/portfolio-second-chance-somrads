version: '3.2'

services:
  api:
    container_name: dev5-api
    env_file:
      - .env
    build: ./images/api
    ports:
      - 80:3000
    volumes:
      - ./images/api/src:/usr/app/src
    environment:
      POSTGRES_CONNECTION_STRING: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@store:5432/${POSTGRES_DATABASE}"
      POSTGRES_DATABASE: ${POSTGRES_DATABASE} 
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -sSf http://localhost:3000/healthcheck"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  store:
    image: postgres:latest
    container_name: dev5-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $POSTGRES_USER -d $POSTGRES_DATABASE"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  # store-test:
  #   image: postgres:latest
  #   container_name: dev5-db-test
  #   ports:
  #     - 5433:5432
  #   environment:
  #     POSTGRES_USER: ${DB_USER_TEST}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD_TEST}
  #     POSTGRES_DB: ${DB_NAME_TEST}
  #   volumes:
  #     - pgdata-test:/var/lib/postgresql/data
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
  #       ]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

volumes:
  pgdata:
  # pgdata-test:
